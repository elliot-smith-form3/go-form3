// Code generated by go-swagger; DO NOT EDIT.

package fx_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/go-form3/pkg/generated/models"
)

// GetFXDealReader is a Reader for the GetFXDeal structure.
type GetFXDealReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFXDealReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFXDealOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFXDealBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFXDealForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFXDealOK creates a GetFXDealOK with default headers values
func NewGetFXDealOK() *GetFXDealOK {
	return &GetFXDealOK{}
}

/*GetFXDealOK handles this case with default header values.

fx deal response
*/
type GetFXDealOK struct {

	//Payload

	// isStream: false
	*models.FXDealResponse
}

func (o *GetFXDealOK) Error() string {
	return fmt.Sprintf("[GET /fx/deals/{fx_deal_id}][%d] getFXDealOK", 200)
}

func (o *GetFXDealOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.FXDealResponse = new(models.FXDealResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.FXDealResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFXDealBadRequest creates a GetFXDealBadRequest with default headers values
func NewGetFXDealBadRequest() *GetFXDealBadRequest {
	return &GetFXDealBadRequest{}
}

/*GetFXDealBadRequest handles this case with default header values.

bad request
*/
type GetFXDealBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetFXDealBadRequest) Error() string {
	return fmt.Sprintf("[GET /fx/deals/{fx_deal_id}][%d] getFXDealBadRequest", 400)
}

func (o *GetFXDealBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFXDealForbidden creates a GetFXDealForbidden with default headers values
func NewGetFXDealForbidden() *GetFXDealForbidden {
	return &GetFXDealForbidden{}
}

/*GetFXDealForbidden handles this case with default header values.

forbidden
*/
type GetFXDealForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetFXDealForbidden) Error() string {
	return fmt.Sprintf("[GET /fx/deals/{fx_deal_id}][%d] getFXDealForbidden", 403)
}

func (o *GetFXDealForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
