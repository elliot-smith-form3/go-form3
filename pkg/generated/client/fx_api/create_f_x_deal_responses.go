// Code generated by go-swagger; DO NOT EDIT.

package fx_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/go-form3/pkg/generated/models"
)

// CreateFXDealReader is a Reader for the CreateFXDeal structure.
type CreateFXDealReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFXDealReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateFXDealCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateFXDealBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateFXDealForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewCreateFXDealBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateFXDealCreated creates a CreateFXDealCreated with default headers values
func NewCreateFXDealCreated() *CreateFXDealCreated {
	return &CreateFXDealCreated{}
}

/*CreateFXDealCreated handles this case with default header values.

creation response
*/
type CreateFXDealCreated struct {

	//Payload

	// isStream: false
	*models.FXDealResponse
}

func (o *CreateFXDealCreated) Error() string {
	return fmt.Sprintf("[POST /fx/deals][%d] createFXDealCreated", 201)
}

func (o *CreateFXDealCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.FXDealResponse = new(models.FXDealResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.FXDealResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFXDealBadRequest creates a CreateFXDealBadRequest with default headers values
func NewCreateFXDealBadRequest() *CreateFXDealBadRequest {
	return &CreateFXDealBadRequest{}
}

/*CreateFXDealBadRequest handles this case with default header values.

bad request
*/
type CreateFXDealBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateFXDealBadRequest) Error() string {
	return fmt.Sprintf("[POST /fx/deals][%d] createFXDealBadRequest", 400)
}

func (o *CreateFXDealBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFXDealForbidden creates a CreateFXDealForbidden with default headers values
func NewCreateFXDealForbidden() *CreateFXDealForbidden {
	return &CreateFXDealForbidden{}
}

/*CreateFXDealForbidden handles this case with default header values.

forbidden
*/
type CreateFXDealForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateFXDealForbidden) Error() string {
	return fmt.Sprintf("[POST /fx/deals][%d] createFXDealForbidden", 403)
}

func (o *CreateFXDealForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFXDealBadGateway creates a CreateFXDealBadGateway with default headers values
func NewCreateFXDealBadGateway() *CreateFXDealBadGateway {
	return &CreateFXDealBadGateway{}
}

/*CreateFXDealBadGateway handles this case with default header values.

FX rates gateway issue
*/
type CreateFXDealBadGateway struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateFXDealBadGateway) Error() string {
	return fmt.Sprintf("[POST /fx/deals][%d] createFXDealBadGateway", 502)
}

func (o *CreateFXDealBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
