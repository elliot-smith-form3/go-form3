// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FXDealCreatedEventRelationships f x deal created event relationships
// swagger:model FXDealCreatedEventRelationships
type FXDealCreatedEventRelationships struct {

	// fx deal submission
	// Required: true
	FxDealSubmission *FXDealCreatedEventRelationshipFXDealSubmission `json:"fx_deal_submission"`

	// party
	// Required: true
	Party *FXDealRelationshipParty `json:"party"`
}

func FXDealCreatedEventRelationshipsWithDefaults(defaults client.Defaults) *FXDealCreatedEventRelationships {
	return &FXDealCreatedEventRelationships{

		FxDealSubmission: FXDealCreatedEventRelationshipFXDealSubmissionWithDefaults(defaults),

		Party: FXDealRelationshipPartyWithDefaults(defaults),
	}
}

func (m *FXDealCreatedEventRelationships) WithFxDealSubmission(fxDealSubmission FXDealCreatedEventRelationshipFXDealSubmission) *FXDealCreatedEventRelationships {

	m.FxDealSubmission = &fxDealSubmission

	return m
}

func (m *FXDealCreatedEventRelationships) WithoutFxDealSubmission() *FXDealCreatedEventRelationships {
	m.FxDealSubmission = nil
	return m
}

func (m *FXDealCreatedEventRelationships) WithParty(party FXDealRelationshipParty) *FXDealCreatedEventRelationships {

	m.Party = &party

	return m
}

func (m *FXDealCreatedEventRelationships) WithoutParty() *FXDealCreatedEventRelationships {
	m.Party = nil
	return m
}

// Validate validates this f x deal created event relationships
func (m *FXDealCreatedEventRelationships) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFxDealSubmission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParty(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FXDealCreatedEventRelationships) validateFxDealSubmission(formats strfmt.Registry) error {

	if err := validate.Required("fx_deal_submission", "body", m.FxDealSubmission); err != nil {
		return err
	}

	if m.FxDealSubmission != nil {
		if err := m.FxDealSubmission.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fx_deal_submission")
			}
			return err
		}
	}

	return nil
}

func (m *FXDealCreatedEventRelationships) validateParty(formats strfmt.Registry) error {

	if err := validate.Required("party", "body", m.Party); err != nil {
		return err
	}

	if m.Party != nil {
		if err := m.Party.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("party")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FXDealCreatedEventRelationships) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FXDealCreatedEventRelationships) UnmarshalBinary(b []byte) error {
	var res FXDealCreatedEventRelationships
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *FXDealCreatedEventRelationships) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
